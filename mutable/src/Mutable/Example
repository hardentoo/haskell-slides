module Mutable.Example where

import Control.Monad
import Control.Monad.State

example1 :: State (Integer, Integer) Integer
example1 = do
  replicateM 100 $ do
    (n, m) <- get
    put (m, n + m)
  (n, _) <- get
  return n

example2 :: StateT (Integer, Integer) IO Integer
example2 = do
  replicateM 100 $ do
    (n, m) <- get
    lift $ print n
    put (m, n + m)
  (n, _) <- get
  return n

